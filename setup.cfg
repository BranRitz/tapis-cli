# As per PEP 566
[metadata]
name = tapis_cli
summary = Command line tools to support the TACC Tapis platform
description-file = README.rst
author = Matthew Vaughn, Erik Ferlanti, John Fonner, William Allen
maintainer-email = "TACC Help" <cli-help@tacc.cloud>
author-email = "TACC Opensource" <opensource@tacc.cloud>
home-page = https://github.com/TACC-Cloud/tapis-cli-ng
zip_safe = False
; long_description = file: README.rst, CHANGELOG.rst, LICENSE.rst
keywords = faas, rest, web service, openapi, swagger, serverless
license = LICENSE.txt
classifier =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7

[build_sphinx]
builders = html,man
all-files = 1
source-dir = docs
build-dir = docs/_build

[bdist_wheel]
universal = 1

[aliases]
test = pytest

[pbr]
autodoc_tree_index_modules = False
autodoc_tree_excludes =
    setup.py

[pylint]
disable = W0614,C0103,C0111
ignore = migrations
ignore-docstrings = yes
output-format = colorized

[flake8]
include = tapis_cli
exclude = build,dist,docs/conf.py,*.egg-info,tests
ignore = E402,E501,F401,F403,E402,E302,E305,811
max-line-length = 140
max-complexity = 10
verbose = 0
jobs = 2
statistics = True

[yapf]
based_on_style = pep8
spaces_before_comment = 4
split_before_logical_operator = true

[tool:pytest]
python_files = test_*.py
norecursedirs = env _build tmp* offline .git *.egg-info
testpaths = tests/
addopts = -p no:warnings --cov=tapis_cli --cov-report term --flakes
log_cli_level = ERROR
flakes-ignore =
    *.py UnusedImport ImportStarUsed

[coverage:run]
omit =

[files]
packages =
    tapis_cli

[entry_points]
console_scripts =
    tapis = tapis_cli.main:main
tapis.cli =
    # Local
    versions = tapis_cli.commands.local.versions:Version
    statuses = tapis_cli.commands.local.statuses:Status
    settings_list = tapis_cli.commands.local.settings_list:SettingsList
    # APIM
    auth_init = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_show = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_list = tapis_cli.clients.basic:BasicHTTPFormatMany
    auth_switch = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_clients_show = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_clients_list = tapis_cli.clients.basic:BasicHTTPFormatMany
    auth_clients_create = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_clients_delete = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_tokens_show = tapis_cli.clients.basic:BasicHTTPFormatOne
    auth_tokens_create = tapis_cli.commands.taccapis.v2.apim:TokenCreate
    auth_tokens_refresh = tapis_cli.commands.taccapis.v2.apim:TokenRefresh
    # Agave/Aloe
    # Apps
    apps_create = tapis_cli.commands.taccapis.v2.apps:AppsCreate
    apps_update = tapis_cli.commands.taccapis.v2.apps:AppsUpdate
    apps_show = tapis_cli.commands.taccapis.v2.apps:AppsShow
    apps_search = tapis_cli.commands.taccapis.v2.apps:AppsSearch
    apps_list = tapis_cli.commands.taccapis.v2.apps:AppsList
    ; apps_clone = tapis_cli.commands.taccapis.v2.apps.formatters:AppsFormatOne
    ; apps_init = tapis_cli.commands.taccapis.v2.apps.formatters:AppsFormatOne
    ; apps_deploy = tapis_cli.commands.taccapis.v2.apps.formatters:AppsFormatOne
    apps_publish = tapis_cli.commands.taccapis.v2.apps:AppsPublish
    apps_unpublish = tapis_cli.commands.taccapis.v2.apps:AppsUnpublish
    apps_enable = tapis_cli.commands.taccapis.v2.apps:AppsEnable
    apps_disable = tapis_cli.commands.taccapis.v2.apps:AppsDisable
    apps_history = tapis_cli.commands.taccapis.v2.apps:AppsHistory
    apps_pems_list = tapis_cli.commands.taccapis.v2.apps:AppsPemsList
    apps_pems_show = tapis_cli.commands.taccapis.v2.apps:AppsPemsShow
    apps_pems_grant =  tapis_cli.commands.taccapis.v2.apps:AppsPemsGrant
    apps_pems_revoke =  tapis_cli.commands.taccapis.v2.apps:AppsPemsRevoke
    ; apps_pems_drop = tapis_cli.commands.taccapis.v2.apps:AppsPemsDrop
    # Files
    ; files_copy = tapis_cli.clients.services:TaccApisFormatOne
    ; files_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; files_get = tapis_cli.clients.services:TaccApisFormatOne
    ; files_history = tapis_cli.clients.services:TaccApisFormatMany
    ; files_import = tapis_cli.clients.services:TaccApisFormatMany
    ; files_list = tapis_cli.clients.services:TaccApisFormatMany
    ; files_mkdir = tapis_cli.clients.services:TaccApisFormatOne
    ; files_move = tapis_cli.clients.services:TaccApisFormatOne
    ; files_pems_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; files_pems_list = tapis_cli.clients.services:TaccApisFormatMany
    ; files_pems_update = tapis_cli.clients.services:TaccApisFormatMany
    ; files_rename = tapis_cli.clients.services:TaccApisFormatOne
    ; files_upload = tapis_cli.clients.services:TaccApisFormatOne
    ; # Jobs
    jobs_show = tapis_cli.commands.taccapis.v2.jobs:JobsShow
    jobs_list = tapis_cli.commands.taccapis.v2.jobs:JobsList
    jobs_status = tapis_cli.commands.taccapis.v2.jobs:JobsStatus
    jobs_search = tapis_cli.commands.taccapis.v2.jobs:JobsSearch
    jobs_history = tapis_cli.commands.taccapis.v2.jobs:JobsHistory
    jobs_submit = tapis_cli.commands.taccapis.v2.jobs:JobsSubmit
    jobs_resubmit = tapis_cli.commands.taccapis.v2.jobs:JobsResubmit
    ; jobs_init = tapis_cli.mocks:FormatOne
    ; jobs_outputs_list = tapis_cli.mocks:FormatMany
    ; jobs_outputs_get = tapis_cli.mocks:FormatOne
    ; jobs_hide = tapis_cli.mocks:FormatOne
    ; jobs_unhide = tapis_cli.mocks:FormatOne
    ; jobs_pems_list = tapis_cli.clients.services:TaccApisFormatMany
    ; jobs_pems_update = tapis_cli.clients.services:TaccApisFormatMany
    ; jobs_pems_delete = tapis_cli.clients.services:TaccApisFormatMany
    ; # Metadata
    metadata_list = tapis_cli.commands.taccapis.v2.metadata:MetadataList
    metadata_show = tapis_cli.commands.taccapis.v2.metadata:MetadataShow
    metadata_search = tapis_cli.commands.taccapis.v2.metadata:MetadataSearch
    ; metadata_pems_list = tapis_cli.clients.services:TaccApisFormatMany
    ; metadata_schema_list = tapis_cli.clients.services:TaccApisFormatMany
    ; metadata_schema_show = tapis_cli.clients.services:TaccApisFormatOne
    ; metadata_schema_pems_list = tapis_cli.clients.services:TaccApisFormatMany
    ; # Notifications
    ; notifications_list = tapis_cli.clients.services:TaccApisFormatMany
    ; notifications_search = tapis_cli.clients.services:TaccApisFormatMany
    ; notifications_show = tapis_cli.clients.services:TaccApisFormatOne
    ; notifications_create = tapis_cli.clients.services:TaccApisFormatOne
    ; notifications_update = tapis_cli.clients.services:TaccApisFormatOne
    ; notifications_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; # Post-its
    ; postits_create = tapis_cli.clients.services:TaccApisFormatOne
    ; postits_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; postits_list = tapis_cli.clients.services:TaccApisFormatMany
    ; # Profiles
    ; profiles_show = tapis_cli.commands.taccapis.v2.profiles:ProfilesShow
    ; profiles_show_self = tapis_cli.commands.taccapis.v2.profiles:ProfilesShowSelf
    ; profiles_list = tapis_cli.commands.taccapis.v2.profiles:ProfilesList
    ; profiles_search = tapis_cli.commands.taccapis.v2.profiles:ProfilesSearch
    ; ; profiles_create = tapis_cli.clients.services:TaccApisFormatOne
    ; ; profiles_update = tapis_cli.clients.services:TaccApisFormatOne
    ; ; profiles_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; # Systems
    systems_list = tapis_cli.commands.taccapis.v2.systems:SystemsList
    systems_search = tapis_cli.commands.taccapis.v2.systems:SystemsSearch
    systems_show = tapis_cli.commands.taccapis.v2.systems:SystemsShow
    systems_status = tapis_cli.commands.taccapis.v2.systems:SystemsStatus
    systems_history = tapis_cli.commands.taccapis.v2.systems:SystemsHistory
    systems_create = tapis_cli.commands.taccapis.v2.systems:SystemsCreate
    systems_update = tapis_cli.commands.taccapis.v2.systems:SystemsUpdate
    systems_enable = tapis_cli.commands.taccapis.v2.systems:SystemsEnable
    systems_disable = tapis_cli.commands.taccapis.v2.systems:SystemsDisable
    systems_publish = tapis_cli.commands.taccapis.v2.systems:SystemsPublish
    systems_unpublish = tapis_cli.commands.taccapis.v2.systems:SystemsUnpublish
    systems_queues_list = tapis_cli.commands.taccapis.v2.systems:SystemsQueuesList
    ; systems_queues_create = tapis_cli.mocks:FormatOne
    ; systems_queues_update = tapis_cli.mocks:FormatOne
    ; systems_queues_delete = tapis_cli.mocks:FormatOne
    ; systems_queues_disable = tapis_cli.mocks:FormatOne
    ; systems_queues_enable = tapis_cli.mocks:FormatOne
    systems_roles_list = tapis_cli.commands.taccapis.v2.systems:SystemsRolesList
    systems_roles_show = tapis_cli.commands.taccapis.v2.systems:SystemsRolesShow
    systems_roles_grant = tapis_cli.commands.taccapis.v2.systems:SystemsRolesGrant
    systems_roles_revoke = tapis_cli.commands.taccapis.v2.systems:SystemsRolesRevoke
    systems_roles_drop = tapis_cli.commands.taccapis.v2.systems:SystemsRolesDrop
    ; # Abaco
    ; actors_init = tapis_cli.clients.services:TaccApisFormatOne
    ; actors_list = tapis_cli.clients.services:TaccApisFormatMany
    ; actors_show = tapis_cli.clients.services:TaccApisFormatOne
    ; actors_create = tapis_cli.clients.services:TaccApisFormatOne
    ; actors_deploy = tapis_cli.clients.services:TaccApisFormatOne
    ; actors_update = tapis_cli.clients.services:TaccApisFormatOne
    ; actors_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; # Keys
    ; sshkeys_list = tapis_cli.clients.services:TaccApisFormatMany
    ; sshkeys_create = tapis_cli.clients.services:TaccApisFormatOne
    ; sshkeys_delete = tapis_cli.clients.services:TaccApisFormatOne
    ; # Gitlab
    ; gitlab_login = tapis_cli.clients.services:GitlabBasicFormatOne
    ; gitlab_token_show = tapis_cli.mocks:FormatOne
    ; gitlab_login_refresh = tapis_cli.clients.services:GitlabBasicFormatOne
    ; gitlab_logout = tapis_cli.clients.services:GitlabBasicFormatOne
    ; gitlab_projects_list = tapis_cli.clients.services:GitlabTokenFormatMany
    ; gitlab_projects_show = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_projects_create = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_projects_update = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_projects_delete = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_groups_list = tapis_cli.clients.services:GitlabTokenFormatMany
    ; gitlab_groups_show = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_sshkeys_list = tapis_cli.clients.services:GitlabTokenFormatMany
    ; gitlab_sshkeys_show = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_sshkeys_create = tapis_cli.clients.services:GitlabTokenFormatOne
    ; gitlab_sshkeys_delete = tapis_cli.clients.services:GitlabTokenFormatOne
